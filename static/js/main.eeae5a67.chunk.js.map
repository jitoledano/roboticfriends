{"version":3,"sources":["reportWebVitals.js","Components/Card.js","Components/cardList.js","Components/Searchbox.js","Components/Scroll.js","Containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","id","name","email","className","alt","src","CardList","robots","cardArray","map","user","i","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","response","json","users","this","filteredRobots","filter","toLowerCase","includes","length","Component","ReactDOM","render","document","getElementById"],"mappings":"oMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,oCCUCQ,EAfF,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,MACrB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BL,EAA1B,cACrB,gCACI,6BACKC,IAEL,4BACKC,WCGNI,EAXE,SAAC,GAAa,IAAZC,EAAW,EAAXA,OACTC,EAAYD,EAAOE,KAAI,SAACC,EAAMC,GAChC,OAAQ,cAAC,EAAD,CAAqBX,GAAIO,EAAOI,GAAGX,GAAIC,KAAMM,EAAOI,GAAGV,KAAMC,MAAOK,EAAOI,GAAGT,OAAnE,OAAQS,MAE/B,OACI,8BACKH,KCAEI,EAPG,SAAC,GAA+B,EAA9BC,YAA+B,IAAlBC,EAAiB,EAAjBA,aAC7B,OACI,uBAAOX,UAAU,mCAAmCY,KAAK,SAASC,YAAY,gBAAgBC,SAAUH,KCMjGI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKJ,EAAMK,YC0CJC,G,wDAvCX,aAAc,IAAD,8BACT,gBAYJC,eAAe,SAACC,GACZ,EAAKC,SAAS,CAACC,YAAaF,EAAMG,OAAOC,SAZzC,EAAKC,MAAM,CACPzB,OAAQ,GACRsB,YAAa,IAJR,E,gEAQO,IAAD,OACfI,MAAM,8CAA8CxC,MAAK,SAAAyC,GAAQ,OAAGA,EAASC,UAAQ1C,MAAK,SAAA2C,GAAK,OAAI,EAAKR,SAAS,CAAErB,OAAQ6B,S,+BAOtH,IAAD,EAC4BC,KAAKL,MAA7BzB,EADJ,EACIA,OAAQsB,EADZ,EACYA,YACVS,EAAiB/B,EAAOgC,QAAO,SAAAhC,GACjC,OAAOA,EAAON,KAAKuC,cAAcC,SAASZ,EAAYW,kBAGzD,OAAQjC,EAAOmC,OAGR,sBAAKvC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWW,aAAcuB,KAAKX,iBAC9B,cAAC,EAAD,UACK,cAAC,EAAD,CAAUnB,OAAQ+B,SAN9B,6C,GAxBKK,cCAlBC,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,SAKhDzD,M","file":"static/js/main.eeae5a67.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst Card = ({id, name, email}) =>{\r\n    return(\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow 5'>\r\n            <img alt='Robots' src={`https://robohash.org/${id}?200x200`}/>\r\n            <div>\r\n                <h2>\r\n                    {name}\r\n                </h2>\r\n                <p>\r\n                    {email}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from'./Card';\r\n\r\nconst CardList = ({robots}) =>{\r\n    const cardArray = robots.map((user, i) =>{\r\n        return( <Card key={\"name\"+ i}id={robots[i].id} name={robots[i].name} email={robots[i].email}/>)\r\n    })\r\n    return(\r\n        <div>\r\n            {cardArray}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchField, searchChange}) =>{\r\n    return(\r\n        <input className='pa3 ba b--green bg-lightest-blue' type='search' placeholder='Search Robots' onChange={searchChange}/>\r\n\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '1px solid black', height: '500px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport CardList from '../Components/cardList';\r\nimport SearchBox from '../Components/Searchbox'\r\nimport Scroll from '../Components/Scroll'\r\nimport './app.css';\r\n\r\n\r\nclass App extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n    \r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users').then(response=> response.json()).then(users => this.setState({ robots: users}))\r\n    }\r\n\r\n\r\n    onSearchChange=(event)=>{\r\n        this.setState({searchfield: event.target.value});\r\n    }\r\n    render(){\r\n        const { robots, searchfield } = this.state;\r\n        const filteredRobots = robots.filter(robots =>{\r\n            return robots.name.toLowerCase().includes(searchfield.toLowerCase())\r\n        })\r\n\r\n         return !robots.length ? \r\n             <h1>Loading</h1> :\r\n      \r\n                <div className='tc'>\r\n                    <h1 className='f1'>RoboFriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                         <CardList robots={filteredRobots}/>\r\n                    </Scroll>\r\n                </div>\r\n            \r\n        \r\n\r\n    }\r\n}\r\n    \r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './Containers/App';\n\nReactDOM.render(<App/>, document.getElementById('root'))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();  "],"sourceRoot":""}